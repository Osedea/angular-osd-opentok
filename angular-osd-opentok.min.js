"use strict";!function(){angular.module("osdOpentok",["ngLodash"])}(),function(){function e(e){e.put("template/angular-osd-opentok.html",'<div id="opentokDiv" class="video-block"><div class="subscriber-list"><div id="subscriber-{{ $index + 1 }}"ng-repeat="subscriber in subscribers"ng-class="subscriber.isFullscreen ? \'main-subscriber\' : \'thumbnail-subscriber\'"ng-click="switchFullscreen(subscriber)"ng-style="getSubscriberStyle(subscriber)"></div></div><div id="publisherDiv"ng-show="showPublisherTile"ng-class="{ \'fullscreen\' : publisher.isFullscreen }"class="publisher"></div><div class="dropup"><button class="btn btn-primary" type="button" id="dropdownMenu2" data-toggle="dropdown"aria-expanded="true">Users ( {{ streamsAvailable.length + 1 }} ) <span class="caret"></span></button><ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu2"><li><a ng-click="showPublisherTile = !showPublisherTile"ng-disabled="isSubscribing() && !isBeingSubscribedTo(stream)"><span>You</span><div class="pull-right"><i class="fa" ng-class="showPublisherTile ? \'fa-compress\' : \'fa-expand\'"></i></div></a></li><li ng-repeat="stream in streamsAvailable | streamsList:isModerator"><a ng-click="isBeingSubscribedTo(stream) ? forceDisconnect(stream) : subscribe(stream)"ng-show="isModerator"><span>{{ stream.name }}</span><div class="pull-right"><i class="fa" ng-class="isBeingSubscribedTo(stream) ? \'fa-stop\' : \'fa-play\'"></i></div></a></li></ul></div></div>')}e.$inject=["$templateCache"],angular.module("osdOpentok").run(e)}(),function(){function e(e,s,i,n,t,r,o,c,l){function a(){s(function(){e.mediaAccessAllowed=!0})}function u(){e.mediaAccessAllowed=!1,e.openModal("#access-denied")}function b(i){s(function(){var s=i.stream;v(s.connection)||e.streamsAvailable.push(s)})}function d(s){h(s.stream.connection),e.$apply()}function p(s){h(s.connection),e.$apply()}function f(s){var i=v(s.from);T.subscribe(i,!1),e.$apply()}function g(){S.disconnect(),e.streamsAvailable=[],e.subscribers=[],e.$apply()}function h(s){var i=v(s);i&&(m(i),e.streamsAvailable=l.splice(i,e.streamsAvailable)),e.subscribers.length?e.switchFullscreen(e.subscribers[0]):n.isFullscreen=!0}function m(s){e.subscribers=c.reject(e.subscribers,function(e){return e.session.stream&&e.session.stream.id===s.id})}function v(s){return c.first(c.filter(e.streamsAvailable,function(e){return e.connection.id===s.id}))}function y(){S.on({streamCreated:b,streamDestroyed:d,connectionDestroyed:p,signal:function(e){"signal:subscribe"==e.type&&f(e),"signal:disconnect"==e.type&&g(e)}})}function w(){n.session.on({accessAllowed:a,accessDenied:u})}function A(e){e&&console.log("Error: ",e)}var S=null,T=this,k=document.getElementById("opentokDiv");k.style.height=parseInt(3*k.offsetWidth/5)+"px",e.config=r,e.systemRequirementsMet=!!OT.checkSystemRequirements(),e.mediaAccessAllowed=!1,e.publishingVideo=n.publishingVideo,e.isModerator=!1,e.showPublisherTile=!0,e.publisher=n,e.streamsAvailable=[],e.subscribers=[],e.isModerator=!0,T.init=function(){var s=new XMLHttpRequest;XMLHttpRequest.prototype=Object.getPrototypeOf(s),OT.registerScreenSharingExtension("chrome",e.config.screenshare.extensionId),S=OT.initSession(config.credentials.apiKey,config.credentials.sid,function(e){A(e)}),y(),T.publish()},e.screenshare=function(){OT.checkScreenSharingCapability(function(e){e.supported&&e.extensionRegistered!==!1?e.extensionInstalled===!1?alert("Please install the screen sharing extension and load this page over HTTPS."):T.publish():alert("This browser does not support screen sharing.")})},T.publish=function(){S.connect(e.config.credentials.token,function(e){A(e),n.session=OT.initPublisher(n.divId,n.options,A),w(),S.publish(n.session,A)})},T.subscribe=function(t,r){var o=new i(e.subscribers.length+1);s(function(){n.isFullscreen=!1,e.subscribers.push(o)}),s(function(){o.session=S.subscribe(t,o.divId,o.options),r&&S.signal({type:"subscribe",to:t.connection})},100)},T.unsubscribe=function(e,s){s&&S.signal({type:"disconnect",to:e.connection}),S.unsubscribe(e)},T.forceDisconnect=function(e){1==S.capabilities.forceDisconnect&&(S.forceUnpublish(e),S.forceDisconnect(e))},T.isModerator=function(){return 1==S.capabilities.forceDisconnect},e.subscribe=function(s){if(!e.mediaAccessAllowed)return e.openModal("#camera-access-required"),void 0;if(e.isModerator)return e.subscribers.length>=e.config.maxSubscribers?(e.openModal("#subscriber-limit-modal"),void 0):(T.subscribe(s,!0),void 0)},e.switchFullscreen=function(s){c.each(e.subscribers,function(e){e.isFullscreen=!1}),n.isFullscreen=!1,s.isFullscreen=!0},e.getSubscriberStyle=function(e){return e.getStyle()},e.forceDisconnect=function(e){T.unsubscribe(e,!0),m(e)},e.isBeingSubscribedTo=function(s){return c.some(e.subscribers,function(e){return e.session&&e.session.stream&&e.session.stream.id==s.id})}}function s(){return{restrict:"E",replace:!0,templateUrl:"/templates/angular-osd-opentok.html",controller:"LiveConsultationCtrl",controllerAs:"liveCtrl"}}e.$inject=["$scope","$timeout","Subscriber","Publisher","OpenTok","OpentokConfig","AppointmentUtils","lodash","Array"],angular.module("osdOpentok").directive("liveConsultation",s).controller("LiveConsultationCtrl",e)}();