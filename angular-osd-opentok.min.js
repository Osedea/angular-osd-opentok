"use strict";!function(){angular.module("osdOpentok",[])}(),function(){function e(e){e.put("/templates/angular-osd-opentok.html",'<div id="opentokDiv" class="video-block"><div class="subscriber-list"><div id="subscriber-{{ $index + 1 }}" ng-repeat="subscriber in getSubscribers()" ng-class="subscriber.isFullscreen ? \'main-subscriber\' : \'thumbnail-subscriber\'" ng-click="switchFullscreen(subscriber)" ng-style="subscriber.getStyle()"></div></div><div id="publisherDiv" class="publisher" ng-show="showPublisherTile" ng-class="{ \'fullscreen\' : publisher.isFullscreen }"></div><button class="btn btn-primary screenshare" ng-click="toggleScreenshare()" ng-show="screenshareIsSupported()">{{ publisher.options.videoSource == \'screen\' ? \'Share Camera\' : \'Share Screen\' }}</button><div class="dropup"><button id="dropdownMenu2" class="btn btn-primary" type="button" data-toggle="dropdown" aria-expanded="true">Streams ( {{ getStreamsAvailable().length + 1 }} ) <span class="caret"></span></button><ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu2"><li class="clearfix"><span>You</span><div class="pull-right inline-block"><a ng-click="showPublisherTile = !showPublisherTile"><i class="fa" ng-class="showPublisherTile ? \'fa-compress\' : \'fa-expand\'"></i></a></div></li><li class="clearfix" ng-repeat="stream in getStreamsAvailable()"><span>{{ stream.name }}</span><div class="pull-right inline-block"><a ng-click="isBeingSubscribedTo(stream) ? unsubscribe(stream) : subscribe(stream)"><i class="fa" ng-class="isBeingSubscribedTo(stream) ? \'fa-stop\' : \'fa-play\'"></i></a><a ng-click="forceDisconnect(stream)" ng-show="isModerator()"><i class="fa fa-sign-out"></i></a></div></li></ul></div></div>')}e.$inject=["$templateCache"],angular.module("osdOpentok").run(e)}(),function(){var e=angular.module("osdOpentok");e.provider("OpentokConfig",function(){var e=this,n={maxVideoSubscribers:2,maxAudioSubscribers:2,credentials:{}};return e.setConfig=function(i){return n=i,e},e.$get=function(){return n},e})}(),function(){var e=angular.module("osdOpentok");e.provider("PublisherConfig",function(){var e=this,n={width:200,height:150,name:"Me"};return e.setConfig=function(i){return n=i,e},e.$get=function(){return n},e})}(),function(){var e=angular.module("osdOpentok");e.provider("SubscriberConfig",function(){var e=this,n={width:200,height:150,name:"Me"};return e.setConfig=function(i){return n=i,e},e.$get=function(){return n},e})}(),function(){angular.module("osdOpentok").constant("OPENTOK",{SCREENSHARE:{UNSUPPORTED:1,EXTENSION_REQUIRED:2,SUPPORTED:3}})}(),function(){function e(e,n,i,s,r,t){e.config=r,e.publishingVideo=s.publishingVideo,e.showPublisherTile=!0,e.publisher=s,e.getStreamsAvailable=function(){return i.streamsAvailable},e.getSubscribers=function(){return i.subscribers},e.isBeingSubscribedTo=i.isBeingSubscribedTo,e.switchFullscreen=i.switchFullscreen,e.toggleScreenshare=n.toggleScreenshare,e.isModerator=n.isModerator,e.forceDisconnect=n.forceDisconnect,e.screenshareIsSupported=function(){return n.screenshareAbility==t.SCREENSHARE.SUPPORTED},e.subscribe=function(s){return e.mediaAccessAllowed?i.subscribers.length>=r.maxVideoSubscribers+r.maxAudioSubscribers?(e.onSubscriberLimitReached(),void 0):(n.subscribe(s,!0),void 0):(e.onAccessRequired(),void 0)},e.unsubscribe=function(e){n.unsubscribe(e,!0)},s.onAccessAllowed=function(){e.mediaAccessAllowed=!0,e.onMediaAccessAllowed(),e.$apply()},s.onAccessDenied=function(){e.mediaAccessAllowed=!1,e.onAccessDenied(),e.$apply()}}function n(){return{restrict:"E",replace:!0,templateUrl:"/templates/angular-osd-opentok.html",controller:"LiveConsultationCtrl",controllerAs:"liveCtrl",scope:{onAccessDenied:"&",onAccessRequired:"&",onSubscriberLimitReached:"&",onMediaAccessAllowed:"&"}}}e.$inject=["$scope","SessionManager","DataManager","Publisher","OpentokConfig","OPENTOK"],angular.module("osdOpentok").directive("liveConsultation",n).controller("LiveConsultationCtrl",e)}(),function(){function e(e,n,i){function s(){var e=2;r.subscribers.forEach(function(n){n.isFullscreen||(n.thumbnailCount=e++)})}var r=this;return r.subscribers=[],r.streamsAvailable=[],r.createSubscriber=function(){var e=new i(r.subscribers.length+1);return n.isFullscreen=!1,r.subscribers.push(e),e},r.isBeingSubscribedTo=function(e){return e?r.subscribers.some(function(n){return n.session&&n.session.stream&&n.session.stream.id==e.id}):void 0},r.removeSubscriberByStream=function(e){e&&(r.subscribers=r.subscribers.filter(function(n){return n.session.stream&&n.session.stream.id!=e.id}),r.switchFullscreen())},r.getStreamByConnection=function(e){if(e){var n=r.streamsAvailable.filter(function(n){return n.connection.id===e.id});return n.length?n[0]:null}},r.removeStreamByConnection=function(e){if(e){var n=r.getStreamByConnection(e);n&&(r.removeSubscriberByStream(n),r.streamsAvailable=r.streamsAvailable.filter(function(e){return n.id!=e.id})),r.switchFullscreen()}},r.switchFullscreen=function(i){i&&i.isFullscreen||e(function(){r.subscribers.forEach(function(e){e.isFullscreen=i&&i.divId===e.divId}),n.isFullscreen=!i||!r.subscribers.length,s()})},r}e.$inject=["$timeout","Publisher","Subscriber"],angular.module("osdOpentok").service("DataManager",e)}(),function(){function e(e,n){var i=this;return i.onAccessAllowed=null,i.onAccessDenied=null,i.session=null,i.publishingVideo=!1,i.stream=null,i.isFullscreen=!0,i.divId="publisherDiv",i.options={},i.setOptions=function(){i.options={name:n.credentials.name,width:i.isFullscreen?"100%":e.width+"px",height:i.isFullscreen?"100%":e.height+"px",publishVideo:!0,publishAudio:!0,insertMode:"append"}},i.setScreenshareOptions=function(){i.options={name:n.credentials.name+" - Screenshare",width:i.isFullscreen?"100%":e.width+"px",height:i.isFullscreen?"100%":e.height+"px",insertMode:"append",videoSource:"screen"}},i.setSession=function(e){i.session=e,i.session.on({accessAllowed:i.onAccessAllowed,accessDenied:i.onAccessDenied})},i.toggleVideo=function(){return i.session?(i.session.publishVideo(!i.publishingVideo),i.publishingVideo=!i.publishingVideo,i.publishingVideo):void 0},i}e.$inject=["PublisherConfig","OpentokConfig"],angular.module("osdOpentok").factory("Publisher",e)}(),function(){function e(e,n,i,s,r){function t(){b.on({sessionDisconnected:m,streamCreated:d,streamDestroyed:p,connectionDestroyed:h,signal:function(e){"signal:subscribe"==e.type&&g(e),"signal:unsubscribe"==e.type&&f(e)}})}function o(){i.screenshare&&OT.registerScreenSharingExtension("chrome",i.screenshare.extensionId),OT.checkScreenSharingCapability(function(e){a.screenshareAbility=e.supported&&e.extensionRegistered!==!1?e.extensionInstalled===!1?r.SCREENSHARE.EXTENSION_REQUIRED:r.SCREENSHARE.SUPPORTED:r.SCREENSHARE.UNSUPPORTED})}function c(){var e=Math.max(document.documentElement.clientHeight,window.innerHeight||0),n=document.getElementById("opentokDiv");n.style.height=e-66+"px"}function u(){var e=new XMLHttpRequest;XMLHttpRequest.prototype=Object.getPrototypeOf(e)}function l(e){e&&console.log("Error: ",e)}var a=this,b=null;a.screenshareAbility=null,a.init=function(){c(),u(),o(),b=OT.initSession(i.credentials.apiKey,i.credentials.sid,l),t(),b.connect(i.credentials.token,function(e){l(e),a.publish()})},a.publish=function(){n.setOptions(),n.setSession(OT.initPublisher(n.divId,n.options,l)),b.publish(n.session,l)},a.publishScreen=function(){return a.screenshareAbility===r.UNSUPPORTED?(alert("This browser does not support screen sharing."),void 0):a.screenshareAbility===r.EXTENSION_REQUIRED?(alert("Please install the screen sharing extension and load this page over HTTPS."),void 0):(console.log("publishing screen"),n.setScreenshareOptions(),n.setSession(OT.initPublisher(n.divId,n.options,l)),b.publish(n.session,l),void 0)},a.toggleScreenshare=function(){"screen"===n.options.videoSource?a.publish():a.publishScreen()},a.subscribe=function(n,r){var t=null;e(function(){t=s.createSubscriber()}),e(function(){t.session=b.subscribe(n,t.divId,t.options),s.subscribers.length>i.maxVideoSubscribers&&t.session.subscribeToVideo(!1),r&&b.signal({type:"subscribe",to:n.connection})},50)},a.unsubscribe=function(e,n){n&&b.signal({type:"unsubscribe",to:e.connection}),b.unsubscribe(e),s.removeSubscriberByStream(e)},a.forceDisconnect=function(e){a.isModerator()&&(s.removeSubscriberByStream(),b.forceUnpublish(e),b.forceDisconnect(e.connection))},a.isModerator=function(){return b&&1==b.capabilities.forceDisconnect};var d=function(n){e(function(){s.streamsAvailable.push(n.stream)})},h=function(n){e(function(){s.removeStreamByConnection(n.connection)})},p=function(n){e(function(){console.log("on stream destroyed"),s.removeStreamByConnection(n.stream.connection)})},g=function(n){e(function(){a.subscribe(s.getStreamByConnection(n.from),!1)})},f=function(e){var n=s.getStreamByConnection(e.from);a.unsubscribe(n,!1)},m=function(){e(function(){s.subscribers=[],s.streamsAvailable=[]})};return a}e.$inject=["$timeout","Publisher","OpentokConfig","DataManager","OPENTOK"],angular.module("osdOpentok").service("SessionManager",e)}(),function(){function e(e){return function(n){var i=this;i.session=null,i.isFullscreen=1===n,i.thumbnailCount=n,i.divId="subscriber-"+n,i.options={width:i.isFullscreen?"100%":e.width+"px",height:i.isFullscreen?"100%":e.height+"px",subscribeToVideo:!0,subscribeToAudio:!0,insertMode:"replace"},i.getStyle=function(){var n=-((e.width+5)*i.thumbnailCount);return{width:i.isFullscreen?"100%":e.width+"px",height:i.isFullscreen?"100%":e.height+"px","margin-left":i.isFullscreen?0:n+"px","z-index":i.isFullscreen?1:10}},i.toggleVideo=function(){return i.session?(i.session.subscribeToVideo(!i.subscribingToVideo),i.subscribingToVideo=!i.subscribingToVideo,i.subscribingToVideo):void 0}}}e.$inject=["SubscriberConfig"],angular.module("osdOpentok").service("Subscriber",e)}();